{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jrincon/Documents/ Programming/Projects/jRCoding/game-of-life/src/Context/GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\"; // Estado inicial\n\nconst initialState = {\n  initialConfig: [{\n    gridLayout: [50, 30],\n    speed: 1000\n  }]\n}; // Creaci贸n de contexto\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); // Componente provider\n// Con provider le pasamos cualquier estado, acci贸n al os componentes wrapped, en este caso los componentes de app.js\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      startConfig: state.initialConfig\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/Users/jrincon/Documents/ Programming/Projects/jRCoding/game-of-life/src/Context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","initialState","initialConfig","gridLayout","speed","GlobalContext","GlobalProvider","children","state","dispatch","startConfig"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,QAA+C,OAA/C;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAC,CACd;AACIC,IAAAA,UAAU,EAAE,CAAC,EAAD,EAAI,EAAJ,CADhB;AAEIC,IAAAA,KAAK,EAAE;AAFX,GADc;AADG,CAArB,C,CAUA;;AAEA,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAACG,YAAD,CAAnC,C,CAEP;AACA;;AAEA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAAEC,UAAF,EAAcC,YAAd,CAApC;AAGA,sBAAQ,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACnCS,MAAAA,WAAW,EAAEF,KAAK,CAACN;AADgB,KAA/B;AAAA,cAGHK;AAHG;AAAA;AAAA;AAAA;AAAA,UAAR;AAKC,CATE;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, {createContext, useReducer} from \"react\";\nimport AppReducer from \"./AppReducer\";\n \n// Estado inicial\nconst initialState = {\n    initialConfig:[\n    {\n        gridLayout: [50,30],\n        speed: 1000,\n    }\n]\n}\n\n\n// Creaci贸n de contexto\n\nexport const GlobalContext = createContext(initialState);\n\n// Componente provider\n// Con provider le pasamos cualquier estado, acci贸n al os componentes wrapped, en este caso los componentes de app.js\n\nexport const GlobalProvider = ({children}) => {\n    const [state, dispatch] = useReducer (AppReducer, initialState);\n\n\n    return (<GlobalContext.Provider value={{\n        startConfig: state.initialConfig}}> \n\n        {children}\n    </GlobalContext.Provider>)\n    }\n\n"]},"metadata":{},"sourceType":"module"}