{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jrincon/Documents/ Programming/Projects/jRCoding/game-of-life/src/Components/Controls.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nlet layOut = [];\n\nconst gridSize = (rows = 50, cols = 30) => {\n  let size = [rows, cols];\n  layOut = [...size];\n  console.log(layOut);\n  return size;\n};\n\nexport function Controls() {\n  _s();\n\n  const [hola, setHola] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => gridSize(10, 20),\n      children: \"PRUEBA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Controls, \"pmRkud9BA/tJWgb25rwcvEFZX4g=\");\n\n_c = Controls;\nexport const gridLayoutTest = gridSize(10, 20);\n\nvar _c;\n\n$RefreshReg$(_c, \"Controls\");","map":{"version":3,"sources":["/Users/jrincon/Documents/ Programming/Projects/jRCoding/game-of-life/src/Components/Controls.js"],"names":["React","useState","layOut","gridSize","rows","cols","size","console","log","Controls","hola","setHola","gridLayoutTest"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,IAAIC,MAAM,GAAG,EAAb;;AACA,MAAMC,QAAQ,GAAG,CAACC,IAAI,GAAG,EAAR,EAAYC,IAAI,GAAG,EAAnB,KAA0B;AACvC,MAAIC,IAAI,GAAG,CAACF,IAAD,EAAOC,IAAP,CAAX;AACAH,EAAAA,MAAM,GAAG,CAAC,GAAGI,IAAJ,CAAT;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,SAAOI,IAAP;AACH,CALD;;AAMA,OAAO,SAASG,QAAT,GAAoB;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AAEA,sBACI;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAE,MAAME,QAAQ,CAAC,EAAD,EAAI,EAAJ,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAVeM,Q;;KAAAA,Q;AAYhB,OAAO,MAAMG,cAAc,GAAGT,QAAQ,CAAC,EAAD,EAAI,EAAJ,CAA/B","sourcesContent":["import React, {useState} from 'react'\n\nlet layOut = []\nconst gridSize = (rows = 50, cols = 30) => {\n    let size = [rows, cols]\n    layOut = [...size];\n    console.log(layOut);\n    return size;\n};\nexport function Controls() {\n    const [hola, setHola] = useState(0)\n\n    return (\n        <div>\n            <button onClick={() => gridSize(10,20)}>\n            PRUEBA \n            </button>\n        </div>\n    )\n}\n\nexport const gridLayoutTest = gridSize(10,20);"]},"metadata":{},"sourceType":"module"}