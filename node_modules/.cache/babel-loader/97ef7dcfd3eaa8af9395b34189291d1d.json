{"ast":null,"code":"//this has all the functions used in the Grid Component\nexport const helperFunctions = {\n  // clearGridX : (gridLayout) => {\n  //     rows=[];\n  //     //iterate from 0 to numRows (set by user) and for each row, create numCols (also set by user)\n  //     for (let i = 0; i < gridLayout[0]; i++) {\n  //         //here we push to row Array using .from method, the length will be numCols and for each one\n  //         //we map a value of 0 (dead cell state)\n  //         rows.push(Array.from(Array(gridLayout[1]), () => 0 ));\n  //     }\n  //     return rows;\n  // },\n  timeSet: time => {\n    return time;\n  }\n};","map":{"version":3,"sources":["/Users/jrincon/Documents/ Programming/Projects/jRCoding/game-of-life/src/Resources/functions.js"],"names":["helperFunctions","timeSet","time"],"mappings":"AAAA;AAEA,OAAO,MAAMA,eAAe,GAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,EAAGC,IAAD,IAAU;AACf,WAAOA,IAAP;AACH;AAbyB,CAAvB","sourcesContent":["//this has all the functions used in the Grid Component\n\nexport const helperFunctions ={\n    // clearGridX : (gridLayout) => {\n    //     rows=[];\n    //     //iterate from 0 to numRows (set by user) and for each row, create numCols (also set by user)\n    //     for (let i = 0; i < gridLayout[0]; i++) {\n    //         //here we push to row Array using .from method, the length will be numCols and for each one\n    //         //we map a value of 0 (dead cell state)\n    //         rows.push(Array.from(Array(gridLayout[1]), () => 0 ));\n    //     }\n    //     return rows;\n    // },\n    timeSet: (time) => {\n        return time;\n    }\n};"]},"metadata":{},"sourceType":"module"}